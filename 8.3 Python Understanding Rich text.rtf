{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 LucidaGrande;
\f3\fmodern\fcharset0 Courier-BoldOblique;\f4\fmodern\fcharset0 Courier-Oblique;\f5\froman\fcharset0 Times-Roman;
\f6\froman\fcharset0 Times-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red26\green26\blue26;\red255\green255\blue255;
\red13\green95\blue24;\red234\green255\blue193;\red38\green38\blue38;\red19\green112\blue166;\red50\green91\blue142;
\red83\green83\blue83;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;\red117\green114\blue185;
\red88\green118\blue71;\red152\green54\blue29;\red94\green141\blue197;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;
\cssrgb\c0\c43922\c12549;\cssrgb\c93333\c100000\c80000;\cssrgb\c20000\c20000\c20000;\cssrgb\c5490\c51765\c70980;\cssrgb\c25098\c43922\c62745;
\cssrgb\c40000\c40000\c40000;\cssrgb\c80042\c47128\c19407;\cssrgb\c16744\c16744\c16744;\cssrgb\c66293\c71764\c77796;\cssrgb\c53385\c53278\c77496;
\cssrgb\c41626\c53009\c34888;\cssrgb\c66698\c28556\c14848;\cssrgb\c43922\c62745\c81569;\cssrgb\c0\c0\c93333;}
\margl1440\margr1440
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\up0 \nosupersub \ulnone \outl0\strokewidth0 \strokec2 Hi All,\
Week 8, File handling understanding. I would like to explain the importance of CSV file and how we can read and write in CSV file using python. \
	CSV literally stands for comma separated variable, where the comma is what is known as a "delimiter." While you can also just simply use Python's split() function, to separate lines and data within each line, the CSV module can also be used to make things easy.\
\
	In Python, the\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/csv.html#module-csv"}}{\fldrslt csv}}\'a0module implements classes to read and write tabular data in CSV format. It allows programmers to say, \'93write this data in the format preferred by Excel,\'94 or \'93read data from this file which was generated by Excel,\'94 without knowing the precise details of the CSV format used by Excel. Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.\
The\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/csv.html#module-csv"}}{\fldrslt csv}}\'a0module\'92s\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/csv.html#csv.reader"}}{\fldrslt reader}}\'a0and\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/csv.html#csv.writer"}}{\fldrslt writer}}\'a0objects read and write sequences. Programmers can also read and write data in dictionary form using the\'a0
\f1\b DictReader
\f0\b0 \'a0and\'a0
\f1\b DictWriter
\f0\b0 \'a0classes.\
\pard\pardeftab720\sl448\sa320\qj\partightenfactor0

\f2\fs32 \cf3 \cb4 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs28 \cf2 \cb1 \strokec2 Examples\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf2 \strokec2 The simplest example of reading a CSV file:\
\
Example 1\
Below program just read CSV file and print on console\
\pard\pardeftab720\sl370\partightenfactor0

\f3\i\b\fs30\fsmilli15440 \cf5 \cb6 \strokec5 \
import
\f4\b0 \cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 csv
\f4\b0 \cf7 \cb6 \strokec7 \

\f3\b \cf5 \cb6 \strokec5 with
\f4\b0 \cf7 \cb6 \strokec7  \cf5 \cb6 \strokec5 open\cf7 \cb6 \strokec7 (\cf9 \cb6 \strokec9 'some.csv'\cf7 \cb6 \strokec7 , newline\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 ''\cf7 \cb6 \strokec7 ) 
\f3\b \cf5 \cb6 \strokec5 as
\f4\b0 \cf7 \cb6 \strokec7  f:\
    reader \cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 reader(f)\
    
\f3\b \cf5 \cb6 \strokec5 for
\f4\b0 \cf7 \cb6 \strokec7  row 
\f3\b \cf5 \cb6 \strokec5 in
\f4\b0 \cf7 \cb6 \strokec7  reader:\
        \cf5 \cb6 \strokec5 print\cf7 \cb6 \strokec7 (row)\
\
\pard\pardeftab720\partightenfactor0

\f0\i0\fs28 \cf2 \cb1 \strokec2 Example 2\
Reading a file with an alternate format:\
\
\pard\pardeftab720\sl370\partightenfactor0

\f3\i\b\fs30\fsmilli15440 \cf5 \cb6 \strokec5 import
\f4\b0 \cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 csv
\f4\b0 \cf7 \cb6 \strokec7 \

\f3\b \cf5 \cb6 \strokec5 with
\f4\b0 \cf7 \cb6 \strokec7  \cf5 \cb6 \strokec5 open\cf7 \cb6 \strokec7 (\cf9 \cb6 \strokec9 'passwd'\cf7 \cb6 \strokec7 , newline\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 ''\cf7 \cb6 \strokec7 ) 
\f3\b \cf5 \cb6 \strokec5 as
\f4\b0 \cf7 \cb6 \strokec7  f:\
    reader \cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 reader(f, delimiter\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 ':'\cf7 \cb6 \strokec7 , quoting\cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7 csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 QUOTE_NONE)\
    
\f3\b \cf5 \cb6 \strokec5 for
\f4\b0 \cf7 \cb6 \strokec7  row 
\f3\b \cf5 \cb6 \strokec5 in
\f4\b0 \cf7 \cb6 \strokec7  reader:\
        \cf5 \cb6 \strokec5 print\cf7 \cb6 \strokec7 (row)\
\
\pard\pardeftab720\partightenfactor0

\f0\i0\fs28 \cf2 \cb1 \strokec2 Example 3:\
The corresponding simplest possible writing example is. \
New thing which I learn here is- When you read from one file and write in another file with new delimiter value and same value is present in input file, then new generated csv file has Double quotes around that filed. \
\
\pard\pardeftab720\sl370\partightenfactor0

\f4\i\fs30 \cf11 \cb12 \strokec7 import \cf13 \cb12 \strokec7 csv\
\cf11 \cb12 \strokec7 with \cf14 \cb12 \strokec7 open\cf13 \cb12 \strokec7 (\cf15 \cb12 \strokec7 'some.csv'\cf11 \cb12 \strokec7 , \cf16 \cb12 \strokec7 newline\cf13 \cb12 \strokec7 =\cf15 \cb12 \strokec7 ''\cf13 \cb12 \strokec7 ) \cf11 \cb12 \strokec7 as \cf13 \cb12 \strokec7 file:\
    csv_reader = csv.reader(file\cf11 \cb12 \strokec7 , \cf16 \cb12 \strokec7 delimiter\cf13 \cb12 \strokec7 =\cf15 \cb12 \strokec7 ','\cf11 \cb12 \strokec7 , \cf16 \cb12 \strokec7 quoting\cf13 \cb12 \strokec7 =csv.QUOTE_NONE)\
    \cf11 \cb12 \strokec7 with \cf14 \cb12 \strokec7 open\cf13 \cb12 \strokec7 (\cf15 \cb12 \strokec7 'new_some.csv'\cf11 \cb12 \strokec7 , \cf15 \cb12 \strokec7 'w'\cf13 \cb12 \strokec7 ) \cf11 \cb12 \strokec7 as \cf13 \cb12 \strokec7 newfile:\
        csv_writer = csv.writer(newfile\cf11 \cb12 \strokec7 ,\cf16 \cb12 \strokec7 delimiter\cf13 \cb12 \strokec7 =\cf15 \cb12 \strokec7 "@"\cf13 \cb12 \strokec7 )\
        \cf11 \cb12 \strokec7 for \cf13 \cb12 \strokec7 row \cf11 \cb12 \strokec7 in \cf13 \cb12 \strokec7 csv_reader:\
            csv_writer.writerow(row)\
\pard\pardeftab720\sl370\partightenfactor0

\fs30\fsmilli15440 \cf7 \cb6 \strokec7 \
Input \
\pard\pardeftab720\sl370\partightenfactor0

\fs30 \cf13 \cb12 \strokec7 name,age,email\
Tom,22,Tom@gmail.com\
Harry,23,Harry@gmail.com\
Nick,24,Nick@gmail.com\
Kathy,25,Kathy@gmail.com\
Rina,26,Rina@gmail.com\
Jon,27,Jon@gmail.com\
\
\pard\pardeftab720\sl370\partightenfactor0

\fs30\fsmilli15440 \cf7 \cb6 \strokec7 Output\
\pard\pardeftab720\sl370\partightenfactor0

\fs30 \cf13 \cb12 \strokec7 name@age@email\
Tom@22@"Tom@gmail.com"\
Harry@23@"Harry@gmail.com"\
Nick@24@"Nick@gmail.com"\
Kathy@25@"Kathy@gmail.com"\
Rina@26@"Rina@gmail.com"\
Jon@27@"Jon@gmail.com"\
\
\pard\pardeftab720\sl370\partightenfactor0

\fs30\fsmilli15440 \cf7 \cb6 \strokec7 Example 4:\
\pard\pardeftab720\partightenfactor0

\f0\i0\fs28 \cf2 \cb1 \strokec2 Since\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/functions.html#open"}}{\fldrslt open()}}\'a0is used to open a CSV file for reading, the file will by default be decoded into unicode using the system default encoding (see\'a0{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/locale.html#locale.getpreferredencoding"}}{\fldrslt locale.getpreferredencoding()}}). To decode a file using a different encoding, use the\'a0encoding\'a0argument of open:\
\
\pard\pardeftab720\sl370\partightenfactor0

\f3\i\b\fs30\fsmilli15440 \cf5 \cb6 \strokec5 import
\f4\b0 \cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 csv
\f4\b0 \cf7 \cb6 \strokec7 \

\f3\b \cf5 \cb6 \strokec5 with
\f4\b0 \cf7 \cb6 \strokec7  \cf5 \cb6 \strokec5 open\cf7 \cb6 \strokec7 (\cf9 \cb6 \strokec9 'some.csv'\cf7 \cb6 \strokec7 , newline\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 ''\cf7 \cb6 \strokec7 , encoding\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 'utf-8'\cf7 \cb6 \strokec7 ) 
\f3\b \cf5 \cb6 \strokec5 as
\f4\b0 \cf7 \cb6 \strokec7  f:\
    reader \cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 reader(f)\
    
\f3\b \cf5 \cb6 \strokec5 for
\f4\b0 \cf7 \cb6 \strokec7  row 
\f3\b \cf5 \cb6 \strokec5 in
\f4\b0 \cf7 \cb6 \strokec7  reader:\
        \cf5 \cb6 \strokec5 print\cf7 \cb6 \strokec7 (row)\
\pard\pardeftab720\sl448\sa320\qj\partightenfactor0

\f2\i0\fs32 \cf3 \cb4 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb1 \strokec2 The same applies to writing in something other than the system default encoding: specify the encoding argument when opening the output file.\
A slightly more advanced use of the reader \'97 catching and reporting errors:\
\pard\pardeftab720\sl370\partightenfactor0

\f3\i\b\fs30\fsmilli15440 \cf5 \cb6 \strokec5 import
\f4\b0 \cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 csv
\f4\b0 \cf10 \cb6 \strokec10 ,\cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 sys
\f4\b0 \cf7 \cb6 \strokec7 \
filename \cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7  \cf9 \cb6 \strokec9 'some.csv'\cf7 \cb6 \strokec7 \

\f3\b \cf5 \cb6 \strokec5 with
\f4\b0 \cf7 \cb6 \strokec7  \cf5 \cb6 \strokec5 open\cf7 \cb6 \strokec7 (filename, newline\cf10 \cb6 \strokec10 =\cf9 \cb6 \strokec9 ''\cf7 \cb6 \strokec7 ) 
\f3\b \cf5 \cb6 \strokec5 as
\f4\b0 \cf7 \cb6 \strokec7  f:\
    reader \cf10 \cb6 \strokec10 =\cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 reader(f)\
    
\f3\b \cf5 \cb6 \strokec5 try
\f4\b0 \cf7 \cb6 \strokec7 :\
        
\f3\b \cf5 \cb6 \strokec5 for
\f4\b0 \cf7 \cb6 \strokec7  row 
\f3\b \cf5 \cb6 \strokec5 in
\f4\b0 \cf7 \cb6 \strokec7  reader:\
            \cf5 \cb6 \strokec5 print\cf7 \cb6 \strokec7 (row)\
    
\f3\b \cf5 \cb6 \strokec5 except
\f4\b0 \cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 Error 
\f3\b \cf5 \cb6 \strokec5 as
\f4\b0 \cf7 \cb6 \strokec7  e:\
        sys\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 exit(\cf9 \cb6 \strokec9 'file \cf17 \cb6 \strokec17 \{\}\cf9 \cb6 \strokec9 , line \cf17 \cb6 \strokec17 \{\}\cf9 \cb6 \strokec9 : \cf17 \cb6 \strokec17 \{\}\cf9 \cb6 \strokec9 '\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 format(filename, reader\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 line_num, e))\
\
\pard\pardeftab720\partightenfactor0

\f0\i0\fs28 \cf2 \cb1 \strokec2 And while the module doesn\'92t directly support parsing strings, it can easily be done:\
\pard\pardeftab720\sl370\partightenfactor0

\f3\i\b\fs30\fsmilli15440 \cf5 \cb6 \strokec5 import
\f4\b0 \cf7 \cb6 \strokec7  
\f3\b \cf8 \cb6 \strokec8 csv
\f4\b0 \cf7 \cb6 \strokec7 \

\f3\b \cf5 \cb6 \strokec5 for
\f4\b0 \cf7 \cb6 \strokec7  row 
\f3\b \cf5 \cb6 \strokec5 in
\f4\b0 \cf7 \cb6 \strokec7  csv\cf10 \cb6 \strokec10 .\cf7 \cb6 \strokec7 reader([\cf9 \cb6 \strokec9 'one,two,three'\cf7 \cb6 \strokec7 ]):\
    \cf5 \cb6 \strokec5 print\cf7 \cb6 \strokec7 (row)\
\pard\pardeftab720\sl448\sa320\qj\partightenfactor0

\f2\i0\fs32 \cf3 \cb4 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs28 \cf2 \cb1 \strokec2 References used-\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://pythonprogramming.net/reading-csv-files-python-3/"}}{\fldrslt 
\f5\b0\fs24 \cf18 \ul \ulc18 \strokec18 https://pythonprogramming.net/reading-csv-files-python-3/}}
\f5\b0\fs24 \cf18 \ul \ulc18 \strokec18 \
\pard\pardeftab720\sl370\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/csv.html"}}{\fldrslt 
\f6\i \cf18 \cb6 \ulc18 \strokec18 https://docs.python.org/3/library/csv.html}}
\f6\i \cf18 \cb6 \ulc18 \strokec18 \
}